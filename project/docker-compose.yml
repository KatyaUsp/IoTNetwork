# docker-compose.yml

version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  producer:
    build:
      context: ./producer
    container_name: kafka_producer
    depends_on:
      - kafka
    volumes:
      - ./data:/data

  pyspark:
    build:
      context: ./pyspark
    container_name: pyspark_streaming
    depends_on:
      - kafka
    environment:
      - SPARK_MASTER_NAME=spark-master
      - SPARK_MODE=master
    links:
      - kafka
    volumes:
      - ./pyspark:/app

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=iot_data  # Database for storing data
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
      - INFLUXDB_HTTP_AUTH_ENABLED=true
    volumes:
      - influxdb-data:/var/lib/influxdb
    

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - kafka
      - influxdb
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    image: 'grafana/grafana:latest'
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb

  model:
    build:
      context: ./model
    container_name: model
    depends_on:
      - influxdb
    volumes:
      - ./model:/app

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"

volumes:
  influxdb-data:
    driver: local
  grafana-storage:
    driver: local
